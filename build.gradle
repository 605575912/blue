
allprojects {
    repositories {
        jcenter()
        flatDir {
            dirs 'libs'
        }
    }
}
buildscript {
    repositories {
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.2'
//        classpath 'com.mcxiaoke.gradle:packer-ng:1.0.4'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'

    }

}
apply plugin: 'com.android.application'
//dagger
apply plugin: 'com.neenbedankt.android-apt'
//apply plugin: 'packer'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.3"

    defaultConfig {
        applicationId "com.show.blue"
        minSdkVersion 12
        targetSdkVersion 24
        versionCode 2
        versionName "1.1"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
//        generatedDensities = ['xxhdpi', 'xhdpi']
//        jackOptions {
//            enabled true
//        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    lintOptions {
        abortOnError false
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }

    File propFile = file('signing.properties');
    if (propFile.exists()) {
        def Properties props = new Properties()
        props.load(new FileInputStream(propFile))
        if (props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
                props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
            android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
            android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
            android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
            android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
        } else {
            android.buildTypes.release.signingConfig = null
        }
    } else {
        android.buildTypes.release.signingConfig = null
    }

    signingConfigs {
        debug {
            // No debug config
            storeFile file("xili123.keystore")
            storePassword "xili123"
            keyAlias "xili123.keystore"
            keyPassword "xili123"
        }
    }

    buildTypes {
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            versionNameSuffix "-debug"
            minifyEnabled false

            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }

        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"

            minifyEnabled false //混淆
            zipAlignEnabled false
            // 移除无用的resource文件
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        def fileName = "${variant.productFlavors[0].name}_${defaultConfig.versionName}.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
    }
    productFlavors {
//        website { buildConfigField "boolean", "AUTO_UPDATES", "false" }
        Blue { buildConfigField "boolean", "AUTO_UPDATES", "false" }
    }
    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/java']
            aidl.srcDirs = ['src/main/aidl']
            renderscript.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
            main {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java.srcDirs = ['src/main/java']
                resources.srcDirs = ['src/main/java']
                aidl.srcDirs = ['src/main/aidl']
                renderscript.srcDirs = ['src/main/java']
                res.srcDirs = ['src/main/res']
                assets.srcDirs = ['assets']
                jniLibs.srcDirs = ['libs']

            }
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
//    compile(name: 'uiframe-release', ext: 'aar')
//    compile(name: 'Loaderjar-debug', ext: 'aar')
    //    compile project(':XswStudentLibrary')
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
    //    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    //dagger start
    apt 'com.google.dagger:dagger-compiler:2.0'
    //dagger end
    compile 'com.google.dagger:dagger:2.0'
    compile 'org.glassfish:javax.annotation:10.0-b28'
    //dagger end
    //    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    //    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    //    compile 'com.j256.ormlite:ormlite-core:4.48'
    //    compile 'com.j256.ormlite:ormlite-android:4.48'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'org.robolectric:robolectric:3.0'
    testCompile 'org.robolectric:robolectric-annotations:3.0'
    //robolectric针对support-v4的shadows
    testCompile 'org.robolectric:shadows-support-v4:3.0'
    //    compile 'io.reactivex:rxandroid:1.2.0'
    //    compile 'io.reactivex:rxjava:1.1.5'
    //    compile 'com.android.support:cardview-v7:24.0.0'
    //    compile 'com.android.support.test:runner:0.5'
}
